# ðŸš€ Tire Manufacturing RAG System - Python Dependencies
# Complete requirements for Agentic RAG + GraphRAG Business Intelligence Platform

# ===================================================================
# CORE MULTI-AGENT FRAMEWORK
# ===================================================================
crewai[tools]==0.70.1
langchain-community==0.3.1
langchain-openai==0.2.1
langchain-experimental==0.3.1

# ===================================================================
# LOCAL LLM SUPPORT
# ===================================================================
ollama==0.3.3
transformers==4.45.0
torch==2.4.0
accelerate==0.34.2

# ===================================================================
# RAG AND KNOWLEDGE SYSTEMS
# ===================================================================
# Traditional RAG
chromadb==0.5.15
sentence-transformers==3.1.1
faiss-cpu==1.8.0
langchain-chroma==0.1.4

# GraphRAG Support
neo4j==5.23.0
py2neo==2021.2.4
networkx==3.3
python-louvain==0.16

# Knowledge Graph Processing
rdflib==7.0.0
owlrl==6.0.2
sparqlwrapper==2.0.0

# ===================================================================
# COMPUTER VISION (TIRE DEFECT DETECTION)
# ===================================================================
ultralytics==8.3.0
opencv-python==4.10.0.84
pillow==10.4.0
torchvision==0.19.0
albumentations==1.4.15

# ===================================================================
# DATA PROCESSING AND ANALYTICS
# ===================================================================
pandas==2.2.2
numpy==1.26.4
scipy==1.14.1
scikit-learn==1.5.2
duckdb==1.1.0
sqlalchemy==2.0.35
polars==1.8.1

# ===================================================================
# DASHBOARD AND VISUALIZATION
# ===================================================================
streamlit==1.39.0
plotly==5.24.1
dash==2.18.1
dash-bootstrap-components==1.6.0
matplotlib==3.9.2
seaborn==0.13.2
bokeh==3.5.2

# ===================================================================
# SECURITY AND COMPLIANCE
# ===================================================================
bandit==1.7.10
safety==3.2.7
requests-oauthlib==1.4.0
cryptography==43.0.1
python-jose[cryptography]==3.3.0

# ===================================================================
# API SECURITY TESTING
# ===================================================================
python-owasp-zap-v2.4==0.1.0
postman-to-openapi==0.1.0
python-security==1.7.1

# ===================================================================
# DEVELOPMENT AND TESTING
# ===================================================================
pytest==8.3.3
pytest-asyncio==0.24.0
pytest-cov==5.0.0
httpx==0.27.2
black==24.8.0
flake8==7.1.1
mypy==1.11.2
isort==5.13.2

# ===================================================================
# API AND WEB FRAMEWORK
# ===================================================================
fastapi==0.115.0
uvicorn==0.31.0
pydantic==2.9.2
python-multipart==0.0.12
jinja2==3.1.4

# ===================================================================
# UTILITIES
# ===================================================================
python-dotenv==1.0.1
pyyaml==6.0.2
requests==2.32.3
tqdm==4.66.5
click==8.1.7
rich==13.8.1
typer==0.12.5

# ===================================================================
# ASYNC AND CONCURRENT PROCESSING
# ===================================================================
asyncio==3.4.3
aiofiles==24.1.0
celery==5.4.0
redis==5.1.1

# ===================================================================
# MACHINE LEARNING OPERATIONS
# ===================================================================
mlflow==2.16.2
wandb==0.18.1
optuna==4.0.0

# ===================================================================
# GRAPH PROCESSING AND ANALYSIS
# ===================================================================
igraph==0.11.6
community==1.0.0b1
python-igraph==0.11.6

# ===================================================================
# NATURAL LANGUAGE PROCESSING
# ===================================================================
spacy==3.7.6
nltk==3.9.1
textblob==0.18.0.post0

# ===================================================================
# MONITORING AND LOGGING
# ===================================================================
prometheus-client==0.21.0
grafana-api==1.0.3
structlog==24.4.0

# ===================================================================
# CONFIGURATION MANAGEMENT
# ===================================================================
hydra-core==1.3.2
omegaconf==2.3.0

# ===================================================================
# MANUFACTURING DOMAIN SPECIFIC
# ===================================================================
# Industrial IoT and sensor data processing
paho-mqtt==2.1.0
influxdb-client==1.45.0

# Statistical process control
statsmodels==0.14.3
control==0.10.0

# Image processing for manufacturing
imageio==2.35.1
scikit-image==0.24.0

# ===================================================================
# DEVELOPMENT TOOLS
# ===================================================================
jupyter==1.1.1
notebook==7.2.2
ipywidgets==8.1.5
pre-commit==3.8.0

# ===================================================================
# DOCUMENTATION
# ===================================================================
mkdocs==1.6.1
mkdocs-material==9.5.39
sphinx==8.0.2

# ===================================================================
# INSTALLATION INSTRUCTIONS
# ===================================================================
# 
# 1. Create virtual environment:
#    python -m venv tire-rag-env
#
# 2. Activate virtual environment:
#    Windows: tire-rag-env\Scripts\activate
#    Mac/Linux: source tire-rag-env/bin/activate
#
# 3. Upgrade pip:
#    python -m pip install --upgrade pip
#
# 4. Install all requirements:
#    pip install -r requirements.txt
#
# 5. Verify installation:
#    python -c "import torch, transformers, langchain_community; print('âœ… Core packages installed')"
#
# ===================================================================
# TROUBLESHOOTING NOTES
# ===================================================================
#
# If you get errors during installation:
#
# 1. PyTorch installation issues:
#    pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
#
# 2. Graph processing issues:
#    pip install python-igraph --upgrade
#
# 3. Computer vision issues:
#    pip install opencv-python-headless (instead of opencv-python)
#
# 4. Memory issues during installation:
#    pip install --no-cache-dir -r requirements.txt
#
# 5. Version conflicts:
#    pip install --force-reinstall -r requirements.txt
#
# ===================================================================